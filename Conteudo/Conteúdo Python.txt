CURSO PYTHON

 - Tipos primitivos e saída de dados

----------------------------------------------------
n1 = int(input("Digite um número:")
n2 = int(input("Digite mais um número:")
s = n1 + n2
print("A soma vale", s) ou print("A soma vale" + s)
----------------------------------------------------
tipo primitivos = int, float, bool, str
----------------------------------------------------
int = 7, -4, 0, 9876
float ou real = 4.5, 0,076, -15.223, 7.0
bool =  True(verdadeiro), False(falso)
str = "Olá", "7.5",""
---------------------------------------------------
*print("A soma vale {}".format(s))
---------------------------------------------------
n = float(input("Digite um valor:"))
print(n)
---------------------------------------------------
n = input("Digite um valor:")
print(n.isnumeric())
---------------------------------------------------
n = input("Digite algo:")
print(n.isalpha())
----------------------------------------------------
n = input("Digite algo:")
print(n.isupper())
----------------------------------------------------

		DESAFIOS:

----------------------------------------------------------
003 - Crie um programa que leia dois números e mostre
a soma entre eles.
----------------------------------------------------------
004 - Faça um programa que leia algo pelo teclado e mostre
na tela o seu tipo primitivo e todas as informações 
possiveis sobre ela.
----------------------------------------------------------

 - Operadores Aritméticos

----------------------------
(==) -> igual
(=) -> atribuição ou recebe
----------------------------
+ Adição = 5+2 == 7
- Subtração = 5-2 == 3
* Multiplicação = 5*2 == 10
/ Divisão = 5/2 == 2.5
** Potência = 5**2 == 25
// Divisão Inteira = 5//2 == 2
%  Resto da Divisão = 5%2 == 1
-------------------------------
** Ordem de Precedência 

1 - ()
2 - **
3 - * / // %
4 - + - 
--------------------------------------------
5 + 3 * 2 == 11
3 * 5 + 4 ** 2 == 31
3 * (5 + 4) ** 2 == 243
5 ** 3 == 125
19 // 2 == 9
19 / 2 = 9.5
365 ** 522 == ...
18 % 2 == 0
122 % 3 == 2
4 ** 3 = 64
pow(4,3) = 64
81**(1/2) == 9.0
25**(1/2) == 5.0
127**(1/3) == 5.026
"Oi" + "Olá" == "OiOlá"
"Oi"*5 == "OiOiOiOiOi"
"="*20 == "=========================="
print("="*20) == ==========================
----------------------------------------------
nome = input("Qual é o seu nome?")
print("Prazer em te conhecer {:.>20}!".format(nome))
R.: Qual é o seu nome? Gustavo
    Prazer em te conhecer                 Gustavo
-----------------------------------------------------
nome = input("Qual é o seu nome?")
print("Prazer em te conhecer {:^20}!".format(nome))
R.: Qual é o seu nome? Gustavo
    Prazer em te conhecer      Gustavo         !
-----------------------------------------------------
nome = input("Qual é o seu nome?")
print("Prazer em te conhecer {:.=^20}!".format(nome))
R.: Qual é o seu nome? Gustavo
    Prazer em te conhecer ===========Gustavo=============!
------------------------------------------------------

		       DESAFIO:	

-------------------------------------------------------------
005 - Faça um programa que leia um número inteiro e mostre na 
tela o seu sucessor e seu antecessor.
-----------------------------------------------------------------
006 - Crie  um algoritmo que leia um número e mostre o seu dobro,
triplo e raiz quadrada.
-----------------------------------------------------------------
007 - Desenvolva um programa que leia as duas notas de um aluno, 
calcule e mostre a sua média
-----------------------------------------------------------------
008 - Escreva um programa que leia um valor em metros e o exiba
convertido em centimetros e milimetros.
-----------------------------------------------------------------
009 - Faça um programa que leia uma número inteiro qualquer e mostre
na tela a sua tabuada.
-----------------------------------------------------------------
010- Crie um programa que leia quanto dinheiro uma pessoa tem na 
carteira e mostre quantos dólares ela pode comprar

Considere = US$1,00 = R$3,27
------------------------------------------------------------------
011 - Faça um programa que leia a largura e a altura de uma parede
em metros, calcule a sua área e a quantidade de tinta necessária
para pinta-lá, sabendo que cada litro de tinta, pinta uma área de
2m².
------------------------------------------------------------------
012 - Faça um algoritmo que leia o preço de um produto e mostre
seu novo preço, com 5% de desconto
------------------------------------------------------------------
013 - Faça um algoritmo que leia o salário de um funcionário e 
mostre seu novo salário, com 15% de aumento.
------------------------------------------------------------------
014 - Escreva um programa que converta uma temperatura digitada
em °C e converta para °F.
------------------------------------------------------------------
015 - Escreva um programa que pergunte a quantidade de Km percorridos
por um carro alugado e a quantidade de dias pelos quais ele foi 
alugado. Calcule o preço a pagar, sabendo que o carro custa R$60
por dia e R$0,15 por Km rodado.
-------------------------------------------------------------------

- Utilizando Módulos

!*importar bibliotecas:
-----------------------------------------------
bebida
suco,milk shake,achocolatado,refrigerante,leite
-----------------------------------------------
comida
pizza,cachorro quente,hamburguer,ovo,ervilha,sopa,taco,panqueca
----------------------------------------------------------------
doce
pudim,rosquinha,picole,biscoito,bolo
---------------------------------------------------------------
import bebida = suco,milk shake,achocolatado,refrigerante,leite
---------------------------------------------------------------
import comida = pizza,cachorro quente,hamburguer,ovo,ervilha,sopa,taco,panqueca
--------------------------------------------------------------------------------
import doce = pudim,rosquinha,picole,biscoito,bolo
---------------------------------------------------
from doce import pudim
-----------------------
math
ceil = arredoandamento pra cima
floor = arredondadamento pra baixp
trunc = tirar as casas decimais, tirar as virgulas
pow = potência 
sqrt = raiz quadrada
factorial = fatorial
-----------------------
import math
from math import sqrt 
---------------------------------------------------
import math
num = int(input("Digite um número:"))
raiz = math.sqrt(num)
print("A raiz de {} é igual a {}".format(num,raiz))
R.: Digite um número:81
A raiz de 81 é igual a 9
----------------------------------------------------
Arredondar pra cima
import math
num = int(input("Digite um número:"))
raiz = math.sqrt(num)
print("A raiz de {} é igual a {}".format(num,math.ceil(raiz))
R.:Digite um número: 29
   A raiz de 29 é igual a 6
------------------------------------------------------
Arredondar pra baixo
import math
num = int(input("Digite um número:"))
raiz = math.sqrt(num)
print("A raiz de {} é igual a {}".format(num,math.floot(raiz))
R.: Digite um número: 29
    A raiz de 29 é igual a 5.39
---------------------------------------------------------------
from math import sqrt
num = int(input("Digite um número:"))
raiz = sqrt(num)
print("A raiz de {} é igual a {:.2f}".format(num,raiz))
R.: Digite um número: 25
    A raiz de 29 é igual a 5.00
---------------------------------------------------------------
from math import sqrt, floor
num = int(input("Digite um número:"))
raiz = sqrt(num)
print("A raiz de {} é igual a {:.2f}".format(num,floor(raiz)))
R.: Digite um número: 29
    A raiz de 29 é igual a 5.00
---------------------------------------------------------------
import random
num = random.random()
print(num)
R.: 0.35283069845
--------------------------------------------------------------
valores aleatorios
import random
num = random.randint(1,10)
print(num)
--------------------------------------------------------------

			DESAFIO:

-----------------------------------------------------------------
016 - Crie um programa que leia um número Real qualquer
pelo teclado e mostre na tela a sua porção inteira.
from math import trunc
(num,math.trunc(num)))
Ex.: Digite um número: 6.127. O número 6.127 tem a parte
inteira 6.
------------------------------------------------------------------
017 - Faça um programa que leia o comprimento do cateto oposto
e do cateto adjacente de um triângulo retângulo, calcule e mostre
o comprimento da hipotenusa.
import math
hipotenusa = math.hypot(co,ca)
ou
from math import hypot
hipotenusa = hypot(co,ca)
--------------------------------------------------------------------
018 - Faça um programa que leia um ângulo qualquer e mostre na tela
o valor no seno, cosseno e tangente desse ângulo.
import math
seno  = math.sin(math.radians(angulo))
cosseno = math.cos(math.radians(angulo))
tangente = math.tan(math.radians(angulo))
---------------------------------------------------------------------
019 - Um professor quer sortear um dos seus quatro alunos para apagar
o quadro. Faça um programa que ajude ele, lendo o nome deles e escrevendo
o nome escolhido.
import random
nome1
nome2...
lista = [ ... ]
escolha = random.choice(lista)
ou 
from random import choice
escolha = choice(lista)
----------------------------------------------------------------------
020 - O mesmo professor do desafio anterior quer sortear a ordem de 
apresentação de trabalhos dos alunos. Faça um programa que leia o nome dos
quatro alunos e mostre a ordem sorteada.
import random
n1
n2
lista = [ n1... n ]
random.shuffle(lista)
ou 
from random import shuffle
n1
n2
lista = [ n1 ... n ]
shuffle(lista)
---------------------------------------------------------------------------
021 - Faça um program em Python que abra e reproduza o áudio de um arquivo
MP3.
---------------------------------------------------------------------------

 - Manipulando Texto

--------------------------------------------------------------
frase = "Curso em Video Python"
[C][u][r][s][o][][e][m][][V][i][d][e][o][][P][y][t][h][o][n]
 0  1  2  3  4  5 6  7 8  9 10 11 12 13 14 15 16 17 18 19 20
---------------------------------------------------------------

*Fatiamento

frase[inicio:final:pula]
frase[p] = p - 1
frase[posição] -> sempre indica a posição = 
frase[9] = [V]
frase[9:13] = [V][i][d][e]
frase[9:20] = [V][i][d][e][o][][P][y][t][h][o][n]
frase[9:21:2] = [V][d][o][P][t][o]
frase[:5] = [C][u][r][s][o]
frase[15:] = [P][y][t][h][o][n]
frase[9::3] = [V][e][P][h]
--------------------------------------------------------------
*Analise
------------------
len = comprimento
len(frase)
---------------------------------------------------------------
frase.count("o") = conta quantas vezes aparece a letra "o" = 3
frase.count("o",0,13)
---------------------------------------------------------------
frase.find("deo") = quantas vezes existe a palavra "deo"
frase.find("Android") = -1
"Curso" in frase  = True or False
---------------------------------------------------------------
* Transformação
-------------------------------------------
replace = trocar
frase.replace("Python","Android")
-------------------------------------------
upper = Em maiusculo
frase.upper()
nome = "carlos henrique"
nome = nome.upper()
print(nome)
-------------------------------------------
lower = Em minusculo
frase.lower()
nome = "carlos henrique"
nome = nome.upper()
print(nome)
-------------------------------------------
capitalize = Primeiro caracter em maiusculo
frase.capitalize()
nome = "carlos henrique"
nome = nome.capitalize()
print(nome)
------------------------------------------------
title = Deixa as iniciais da frase em Maiusculo
strip = remove os espaços do inicio e do final
frase.strip()
frase.title()
------------------------------------------------
.rstrip = remove os espaços da direita
frase.rstrip() 
----------------------------------------
.lstrip = remove os espaços da esquerda
frase.lstrip()
----------------------------------------
*Divisão
-------------
.split() = 
frase.split()
[C][u][r][s][o][e][m][V][i][d][e][o][P][y][t][h][o][n]
 0  1  2  3  4  o  1  0  1  2  3  4  0  1  2  3  4  5
-------------------------------------------------------
*Junção
----------------
"-".join(frase)
[C][u][r][s][o][-][e][m][-][V][i][d][e][o][-][P][y][t][h][o][n]
-----------------------------------------------------------------
frase = "Curso em Video Python"
print(frase[3])
--------------------------------
frase = "Curso em Video Python"
print(frase[:13])
--------------------------------
frase = "Curso em Video Python"
print(frase.count("O"))
--------------------------------
frase = "Curso em Video Python"
print(frase.lower().find("video"))
----------------------------------
frase = "Curso em Video Python"
dividido = frase.split()
print(dividido[2][3])
----------------------------------

		     DESAFIO:

---------------------------------------------------------------------
022 - Crie um programa que leia o nome completo de uma pessoa e 
mostre:

-O nome com todas as letras maiusculas
-O nome com todas minusculas
-Quantas letras ao todo (sem considerar espaços)
-Quantas letras tem o primeiro nome

.strip() -> elimina os espaços que estão entre os caracteres
nome = str(input("Digite o seu nome:")).strip()
format(nome.upper()) -> MAIUSCULO
format(nome.lower()) -> minusculo
format(len(nome) - nome.count("")))
format(nome.find("")))
---------------------------------------------------------------------
023 - Faça um programa que leia um número de 0 a 9999 e mostre
na tela cada um dos digitos separados.
Ex.:
Digite um número:1834
unidade: 4
dezena: 3
centena: 8
milhar: 1

unidade = num // 1 % 10
dezena = num // 10 % 10
centena = num // 100 % 10
milhar = num // 1000 % 10
---------------------------------------------------------------------
024 - Crie um programa que leia o nome de uma cidade e diga se ela
começa ou não com o nome "SANTO".
.strip()
cidade[:5].upper() = "Santo"
---------------------------------------------------------------------
025 - Crie um programa que leia o nome de uma pessoa e diga se ela
tem "SILVA" no nome.

.strip()
.format("SILVA" in nome.upper())
----------------------------------------------------------------------
026 - Faça um programa que leia uma frase pelo teclado e mostre:

-Quantas vezes aparece a letra "A".
-Em que posição ela aparece a primeira vez.
-Em que posição ela aparece a ultima vez.

.upper()
.format(frase.count("A")))
.format(frase.find("A")+1))
.format(frase.rfind("A")+1))
----------------------------------------------------------------------
027 - Faça um programa que leia o nome completo de uma pessoa,
mostrando em seguida o primeiro e o ultimo nome separadamente.

Ex.: Ana Maria de Souza
primeiro = Ana
Ultimo = Souza

.strip()
nome = n.split() -> fatia em pedaços separado por espaços
.format(nome[0]))
.format(nome[len(nome)-1]))
---------------------------------------------------------------------
 - Condições

IF em python nos permite contar ao computador para executar ações
alternativas com base em um determinado conjunto de resultados.

Se isso caso acontecer, execute alguma ação". Podemos então expandir
a ideia com declarações elif e else, o que nos permite contar ao
computador.

"Se esse caso acontecer, execute alguma ação. Caso contrário, se 
aquilo acontecer, execute alguma outra ação. Caso contrário, se nenhum
dos casos acima aconteceu, execute esta ação.
------------------
if case1:
  executar ação1
elif case2:
  executar ação2
else:
  execute a ação3
------------------
se carro.esquerda()
	carro.siga()
	carro.direita()
	carro.siga()
	carro.direita()
	carro.esquerda()
	carro.siga()
	carro.direita()
	carro.siga()
senão
	carro.siga()	
	carro.esquerda()
	carro.siga()
	carro.esquerda()
	carro.siga()
	carro.pare() 
--------------------------------------------
se carro.esquerda()	if carro.esquerda():
	bloco_V_		bloco True
senão			else:
	bloco_F_		bloco False

--------------------------------------------------------------
AND - and = é usado para garantir que as duas verificações
tenham que ser verdadeiras para que a verificação total seja 
verdadeira

1 < 3 > 2
1 < 3 and 3 > 2
--------------------------------------------------------------
OR - or = apenas uma expressão tem que ser verdadeira para
que o valor retorne como True.

1 == 2 or 2 < 3
1 == 1 or 100 == 1 
--------------------------------------------------------------
Condição
if carro.esquerdo():
	bloco True
else:
	bloco False
--------------------------------------------------------------
tempo = int(input("Quantos anos tem seu carro?"))
if tempo <= 3:
	print("carro novo")
else:
	print("carro velho")
print("--FIM--")
---------------------------------------------------------
tempo = int(input("Quantos anos tem seu carro?"))
print("carro novo" if tempo <=3 else"carro velho")
print("--FIM--")
---------------------------------------------------------
nome = str(input("Qual é o seu nome?"))
if nome == "Gustavo":
	print("	Que nome lindo você tem!")
else:
	print("Seu nome é tão normal!")
print("Bom dia,{}!".format(nome))
---------------------------------------------------------
n1 = float(input("Digite a primeira nota:"))
n2 = float(input("Digite a segunda nota:"))
m (n1 + n2)/2
print("A sua média foi: {:.1f}".format(m))
if m >= 6.0:
	print("Sua média for boa! Parabéns!")
else:
	print("Sua média foi ruim! Estude mais!")
---------------------------------------------------------
n1 = float("Digite a primeira nota:"))
n2 = float("Digite a segunda nota:"))
m = (n1 + n2) /2
print("A sua média foi {:.1f}".format(m))
print("Parabéns" if m>= 6 else "ESTUDE MAIS!")
----------------------------------------------------------

			DESAFIO:

----------------------------------------------------------
028 - Escreva um programa que faça o computador "pensar"
em um número inteiro entre 0 e 5 e peça para o usuário
tentar descobrir qual foi o número escolhido pelo 
computador.

O programa deverá escrever na tela se o usuário venceu ou
perdeu.

from random import randint
from time import sleep
sleep(2)
computador = randint(0,5)
-----------------------------------------------------------
029 - Escreva um programa que leia a velocidade de um carro.

Se ele ultrapassar 80Km/h, mostre uma mensagem dizendo que 
ele foi multado.

A multa vai custar R$7,00 por cada Km acima do limite

velocidade = (velocidade - 80) * 7
-----------------------------------------------------------
030 - Crie um programa que leia um número inteiro e mostre
na tela se ele é PAR ou IMPAR.

resultado = num % 2
-------------------------------------------------------------
031 - Desenvolva um programa que pergunte a distância de uma 
viagem em Km. Calcule o preço da passagem, cobrando R$0.50
por Km para viagens de até 200 Km e R$ 0,45 para viagens
mais longas
-------------------------------------------------------------
032 - Faça um programa que leia um ano qualquer e mostre se ele
É BISSEXTO

from datetime import date
if ano == 0:
   ano = date.today().year
if ano % 4 == 0 and ano % 100 != 0 or ano % 400 == 0:
----------------------------------------------------------------
033 - Faça um programa que leia três números e mostre qual é o
maior e qual é o menor.

menor = a
if(b < a) and (b < c):
  menor = b
if(c < a) and (c < b):
  menor = c
-----------------------------------------------------------------
034 - Escreva um programa que pergunte o salário de um funcionario
e calcule o valor do seu aumento.

Para salários superiores a R$1250,00, calcule um aumento de 10%

Para os inferiores ou iguais, o aumento é de 15%
-------------------------------------------------------------------
035 - Desenvolva um programa que leia o comprimento de três retas
e diga ao usuário se elas podem ou não formar um triângulo.
-------------------------------------------------------------------

                    DESAFIO EXTRA:

Faça um programa para um caixa eletrônico. O programa deverá perguntar
ao usuário o valor do saque e depois informar quantas notas de cada
valor serão fornecidas. As notas disponiveis serão as de 1, 5, 10, 50 
e 100 reais.
O valor minimo é de 10 reais e o máximo de 600 reais.
O programa não deve se preocupar com a quantidade de notas existentes
na máquina.
Exemplo1: Para sacar a quantia de 256 reais, o programa fornece duas 
notas de 100, uma nota de 50, uma nota de 5 e uma nota de 1;
Exemplo2: Para sacar a quantia de 399 reais, o programa fornece três 
notas de 100, uma nota de 50, quatro notas de 10, uma nota de 5 e 
quatro notas de 1.
--------------------------------------------------------------------
 - Cores no Terminal

--------------------    
    style     back
\033[   0; 33; 44m
          text
--------------------
*Tipos de style: 
0 -> none (sem estilo) 
1 -> bold (negrito)
4 -> underline (sublinhado)
7 -> negative (inverter as cores da letra e do fundo)
--------------------------------------------------------
*Tipos de text:
30 -> cor branca
31 -> cor vermelha
32 -> cor verde
33 -> cor amarela
34 -> cor azul
35 -> cor roxa
36 -> cor azul marinho
37 - > cor cinza 
-----------------------
*Tipos de back:
40 -> fundo branco
41 -> fundo vermelho
42 -> fundo verde
43 -> fundo amarelo
44 -> fundo azul
45 -> fundo roxo
46 -> fundo azul marinho
47 -> fundo cinza
------------------------
Exemplos:

Teste: \033]0;30;41m -> fundo em vermelho,e texto em branco
Teste: \033]4;33;44m -> fundo em azul claro, e texto sublinhado em amarelo
Teste: \033]1;35;43m -> fundo em amarelo, e teto em roxo
Teste: \033]30;42m   -> fundo em verde, e texto em branco
Teste: \033[m        -> fundo em preto, e texto em cinza
Teste: \033[7;30m    -> fundo em branco, e texto em preto
---------------------------------------------------------------------------
print("\033[031mOlá, Mundo!")
R.: Olá, Mundo! -> em vermelho
---------------------------------
print("\033[31;43mOlá, Mundo!")
R.: Olá, Mundo! -> fundo amarelo, e texto vermelho
---------------------------------------------------
print("\033[1;31;43mOlá,Mundo!")
R.:Olá, Mundo! -> Em negrito
---------------------------------
print("\033[4;30;45mOlá, Mundo!\033[m")
R.:Olá, Mundo! -> fundo roxo, texto branco, sublinhado
-------------------------------------------------------
print("\033[30mOlá, Mundo!\033[m")
R.: Olá, Mundo! -> texto em branco
------------------------------------
print("\033[7;30mOlá, Mundo!\033[m")
R.:Olá, Mundo -> fundo branco, letra preta
-------------------------------------------
print("\033[0;33;44mOlá, Mundo!\033[m")
R.:Olá Mundo! -> fundo azul, texto amarelo
-------------------------------------------
print("\033[7;33;44mOlá, Mundo!\033[m")
R.:Olá Mundo! -> fundo amarelo, texto em azul

a = 3
b = 5
print("Os valores são \033[32m{} e \033[31m{}".format(a,b))
R.: Os valores são 3 e 5 -> 3 e  amarelo -> 5 vermelho
------------------------------------------------------------
a =3 
b =5
print("Os valores são \033[32m{}\033[m e \033[31m{}\033[m!".format(a,b))
R.: Os valores são 3 e 5 -> 3 amarelo, 5 vermelho
-------------------------------------------------------------------------
nome = "Guanabara"
print("Olá! Muito prazer em te conhecer, {} {} {}!".format("\033[4;34m",nome,"\033[m"))
R.: Olá! Muito prazer em te conhecer, Guanabara!! -> Guanabara em azul
----------------------------------------------------------------------------------------

 - Condições Aninhadas

-----------------------------------------------------------
carro.siga()			carro.siga()
se carro.esquerda()		if carro.esquerda():	
	carro.siga()			carro.siga()
	carro.direita()			carro.direita()
	carro.siga()			carro.siga()
	carro.direita()			carro.direita()
	carro.esquerda()		carro.esquerda()
	carro.siga()			carro.siga()
	carro.direita()			carro.direita()
	carro.siga()			carro.siga()
senão se carro.direita()	elif carro.direita():	
	carro.siga()			carro.siga()
	carro.esquerda()		carro.esquerda()
	carro.siga()			carro.siga()
	carro.esquerda()		carro.esquerda()
	carro.siga()			carro.siga()
senão				else:
	carroo.siga()			carro.siga()
carro.pare()			carro.pare()
-----------------------
if carro.esquerda():
	bloco1
elif carro.diireita():
	bloco2
elif carro.ré():
	bloco3
else:
	bloco4
------------------------------------------
nome - str(input("Qual é o seu nome?"))
if nome == "Gustavo":
	print("Que nome bonito!")
print("Tenha um bom dia {}".format(nome))
------------------------------------------
nome = str(input("Qual é o seu nome?"))
if nome == "Gustavo":
	print("Que nome bonito!")
else:
	print("Seu nome é bem normal")
print("Tenha um bom dia,{}!".format(nome))
-------------------------------------------
nome = str(input("Qual é o seu nome?"))
if nome == "Gustavo":
	print("Que nome bonito!")
elif nome == "Pedro" or nome == "Maria" or nome == "Paulo":
	print("Seu nome é bem popular no Brasil")
else:
	print("Seu nome é bem normal")
print("Tenha um bom dia, {}".format(nome))
-------------------------------------------
nome = str(input("Qual é o seu nome?"))
if nome == "Gustavo":
	print("Que nome bonito!")
elif nome == "Pedro" or nome == "Maria" or nome == "Paulo":
	print("Seu nome é bem popular no Brasil")
elif nome in "Ana Caludia":
	print("Belo nome feminino")
else:
	print("Seu nome é boem normal")
print("Tenha um bom dia, {}".format(nome))
-------------------------------------------

               DESAFIO: 

--------------------------------------------------------------
036 - Escreva um programa para aprovar o emprestimo bancário
para a compra de uma casa. O programa vai perguntar o valor
da casa, o salário do comprador e em quantos anos ele vai
pagar.
Calcule o valor da prestação mensal, sabendo que ela não pode 
exceder 30% do salário ou então o emprestimo será negado.

prestação = casa / (anos*12)
minimo = salario * 30/100
end = "" -> deixa tudo na mesma linha na hora da compilação
--------------------------------------------------------------
037 - Escreva um programa que leia um número inteiro qualquer
e peça para o usuário escolher qual será a base de conversão:

1 para binário
2 para octal
3 para hexadecimal

opção = int(input('Sua opção:"))
if opção == 1:
    print("{} convertido para BINÁRIO é igual a {}".format(num,bin(num)))
						    .format(num,oct(num)))
  						    .format(num,hex(num)))
--------------------------------------------------------------
038 - Escreva um programa que leia dois números inteiros e 
compare-os mostrando na tela uma mensagem:

-O primeiro valor é maior
-O segundo valor é maior 
-Não existe valor maior, os dois são iguais
---------------------------------------------------------------
039 - Faça um programa que leia o ano de nascimento de um 
jovem e informe, de acordo com sua idade:

-Se ele ainda vai se alistar ao serviço militar
-Se é a hora de se alistar 
-Se já passou do tempo do alistamento

Seu programa também deverá mostrar o tempo que falta ou
que passou do prazo.

from datetime import date
ano = date.today().year
---------------------------------------------------------------
040 - Crie um programa que leia duas notas de um aluno e 
calcule sua média, mostrando uma mensagem no final, de acordo 
com a média atingida:

- Média abaixo de 5.0: Reprovado
- Média entre 5.0 e 6.9: Recuperação
- Média entre 7.0 ou superior: Aprovado
---------------------------------------------------------------
041 - A Confederação Nacional de Natação precisa de um 
programa que leia o ano de nascimento de um atleta e mostre
sua categoria, de acordo com a idade:

- Até 9 anos: Mirin
- Até 14 anos: Infantil
- Até 19 anos: Junior
- Até 20 anos: Sênior 
- Acima: Master

from datetime import date
ano = date.today().year
---------------------------------------------------------------
042 - Refaça o DESAFIO 035 dos triângulos, acrescentando o 
recurso de mostrar que tipo de triângulo será formado:

-Equilátero: todos os lados iguais
-Isósceles: dois lados iguais
-Escaleno: todos os lados diferentes
----------------------------------------------------------------
043 - Desenvolva uma lógica que leia o peso e altura de uma
pessoa, calcule seu IMC e mostre seu status, de acordo com
a tabela abaixo:

- Abaixo de 18.5: Abaixo do Peso
- Entre 18.5 e 25: Peso ideal
- 25 até 30: Sobrepeso
- 30 até 40: Obesidade
- Acima de 40: Obesidade mórbida
---------------------------------------------------------------
044 - Elabore um programa que calcule o valor a ser pago por
um produto, considerando o seu preço normal e condição de 
pagamento:

- A vista dinheiro/cheque: 10% de desconto
- A vista no cartão: 5% de desconto
- em até 2X no cartão: preço normal
-3x ou mais no cartão: 20% de juros
--------------------------------------------------------------
045 - Crie um programa que faça o computador jogar Jokenpô
com você.

from time import sleep
from random import randint
lista = ["Pedra", "Papel", "Tesoura"]
computador = randint(0,2)
print("O computador escolheu {}".format(lista[computador]))
sleep(1)
print("JO")
...
print("O computador jogou:{}".format(lista[computador]))
print("O jogador jogou:{}".format(lista[jogada]))
------------------------------------------------------------------
	                 DESAFIO EXTRA:

045.1- Faça um programa que leia um número e exiba o dia correspondente
da semana. (1- Domingo, 2 - Segunda, etc.), se digitar outro valor
deve aparecer o valor inválido.

045.2-Faça um programa que leia três números e mostre-os em ordem
decrescente.

045.3 - Faça um programa que leia um número inteiro menor que 1000 e 
imprima a quantidade de centenas, dezenas e unidades do mesmo.
Observando os termos no plural a colocação do "e", da vírgula entre
outros. Exemplo:
326 = 3 centenas, 2 dezenas e 6 unidades
12 = 1 dezena e 2 unidades
Testar com:
326, 300, 100, 320, 310, 305, 301, 101, 311, 111, 25, 20, 10, 21, 11

045.4 - Faça um programa  que leia três números e mostre o maior e o
menor deles.
------------------------------------------------------------------

 - Estrutura de repetição FOR -> Laço de variavel de controle 

-----------------------------------------------------------------
FOR - Um loop for atua como um iterador em Python, ele passa por
itens que estão em uma sequência ou qualquer outro item iterável.
-----------------------------------------------------------------
laço c no intervalo(1,10)	for c in range(1,10):
	passo				passo
pega				pega
-------------------------      ----------------------------------
laço c no intervalo(0,3) 	for c in range(0,3):
	passo				passo
	pula				pula
passo				passo
pega				pega
------------------------       ---------------------------------
laço c no intervalo(0,3)	for c in range(0,3):  
  se moeda			   if moeda:
	pega 				pega
  passo				   passo
  pula				   pula
passo				passo
pega				pega
------------------------       --------------------------------
for c in range(1,6):
	print("Oi")
print("FIM")
R.: Oi
    Oi
    Oi
    Oi
    Oi
    FIM	
------------------------
for c in range(1,6):
	print(c)
print("Fim")
R.:1
   2
   3
   4
   5
   Fim
------------------------
for c in range(6, 0, -1):
	print(c)
print("FIM")
R.: 6 5 4 3 2 1 
------------------------
for c in range(0, 7, 2):
	print(c)
print("FIM")
R.: 0 2 4 6 FIM
------------------------
n = int(input("Digite um número:"))
for c in range(0, n+1):
	print(C)
print("FIM")
R.: 0 1 2 3 4 5 6 7 8 9 10 FIM
-------------------------
i = int(input("Inicio:"))
f = int(input("Fim:"))
p = int(input("Passo:"))
for c in range(i, f+1, p):
	print(c)
print("FIM")
R.:1 2 3 4 5 FIM
-------------------------
for c in range(0,3):
	n = int(input("Digite um valor:"))
print("FIM")
R.: Digite um valor: 3
    Digite um valor: 5
    Digite um valor: 4
    Digite um valor: 1
    Digite um valor: 2
    Digite um valor: 3
    Digite um valor: 0
    Digite um valor: 8
    Digite um valor: 4
    Digite um valor: 5
    Digite um valor: 3
-------------------------
s = 0 
for c in range(0,4):
	n = int(input("Digite um valor:"))
	s += n
print("O somátorio de todos os valores foi {}".format(s))
R.: Digite um valor: 4
    Digite um valor: 2
    Digite um valor: 2
    Digite um valor: 1 
O somatório de todos os valores foi 9
----------------------------------------------------------------

			DESAFIO:

--------------------------------------------------------------------
046 - Faça um programa que mostre na tela uma contagem regressiva
para o estouro de fogos de artificio, indo de 10 até 0, com uma
pausa de 1 segundo entre eles
--------------------------------------------------------------------
047 - Crie um programa que mostre na tela todos os números pares 
que estão no intervalo entre 1 e 50.
--------------------------------------------------------------------
048 - Faça um programa que calcule a soma entre todos os números 
impares que são múltiplos de três e que se encontram no intervalo
de 1 até 500.
--------------------------------------------------------------------
049 - Refaça o DESAFIO 009, mostrando a tabuada de um número que 
o usuário escolher, só que agora utilizando um laço for.
--------------------------------------------------------------------
050 - Desenvolva um programa que leia seis números inteiros e 
mostre a soma apenas daqueles que forem pares. Se o valor digitado
for impar, desconside-o.
--------------------------------------------------------------------
051 - Desenvolva um programa que leia o primeiro termo e a razão de 
uma PA. No final, mostre os 10 primeiros termos dessa progressão.
-------------------------------------------------------------------
052 - Faça um programa que leia um número inteiro e diga se ele é 
ou não um número primo.
--------------------------------------------------------------------
053 - Crie um programa que leia uma frase qualquer e diga se ela é 
um palindromo, desconsiderando os espaços.

Ex.: APOS A SOPA
A SACADA DA CASA
A TORRE DA DERROTA
O LOBO AMA O BOLO
ANOTARAM A DATA DA MARATONA

.strip.upper()
palavras = frase.split()
junto = "".join(palavras)
inverso = ""
for letra in range(len(junto) -1, -1, -1):
   inverso += junto[letra]
print(junto, inverso)
--------------------------------------------------------------------
054 - Crie um programa que leia o ano de nascimento de sete pessoas. 
No final, mostre quantas pessoas ainda atingiram a maioridade e 
quantas já são maiores.

from datetime import date
anoatual = date.today().year
totmaior = 0
totmenor = 0
if idade >= 21:
   totmaior += 1
else:
   totmenor += 1
--------------------------------------------------------------------
055 - Faça um programa que leia o peso de cinco pessoas. No final, mostre
qual foi o maior e o menor peso lidos.

if p == 1:
  maior = peso
  menor = peso
else:
  if peso > maior:
     maior = peso
  if peso < menor:
     menor = peso
--------------------------------------------------------------------------
056 - Desenvolve um programa que leia o nome, idade e sexo de 4 pessoas.
No final do programa, mostre:

A média de idade do grupo.
Qual é o nome do homem mais velho
Quantas mulheres têm menos de 20 anos.
--------------------------------------------------------------------------

- Estrutura de repetição - While - Laços de Repetição

--------------------------------------------------------------------------
A instrução WHILE em Python é uma das formas mais gerais de executar 
iterações.Uma instrução WHILE executará repetidamente uma única declaração
ou grupo de instruções, desde que a condição seja verdadeira. A razão pela
qual é chamado de "loop" é porque as instruções de código são rodadas 
repetidamente até que a condição não seja mais atendida.
---------------------------------------------------------------------------
O formato geral de um loop while é:

while teste:
  declaração de código
else:
  declaração de código final
-------------------------------------
enquanto não maça	while not maça:
	passo			passo
pega			pega

enquanto não maçã	while not maçã:
	se chão			if chão:
	  passo			  passo
	se não chão		if não chão:
	  pula			  pula
	se moeda		if moeda:
	  pega			  pega	
			       pega
--------------------------------------------------------------------------------
c = 1
while c < 10:
	print(c)
	c += 1
print("Fim")
R.: 1 2 3 4 5 6 7 8 9 Fim
--------------------------------------------------------------------------------
n = 1
while n != 0:
	n = int(input("Digite um valor:"))
print("Fim")
R.: Digite um valor: 4
    Digite um valor: 3
    Digite um valor: 1
    Digite um valor: 0
--------------------------------------------------------------------------------
r = "S"
while r == "S":
	n = int(input("Digite um valor:"))
	r = str(input("Quer continuar? [S/N]")).upper()
print("FIM")
R.: Digite um valor: 3
    Que continuar? [S/N] S
    Digite um valor: 6 
    Quer continuar? [S/N]
    Digite um valor: 8
    Quer continuar? n
    Fim
--------------------------------------------------------------------------------
n = 1 
par = impar = 0
while n != 0:
    n = int(input("Digite um valor:"))
    if n % 2 == 0
       par += 1
    else:
       impar += 1
print("Você digitou {} números pares e {} números impares!".format(par,impar))
R.: Digite um valor: 1
    Digite um valor: 2
    Digite um valor: 5
    Digite um valor: 3
    Digite um valor: 4
Você digitou 2 números pares e 3 números impares!
---------------------------------------------------------------------------------

			DESAFIO:

--------------------------------------------------------------------
057 - Faça um programa que leia o sexo de uma pessoa, mas só aceite
os "M" ou "F". Caso esteja errado, peça a digitação novamente até
ter um valor correto.

while sexo not in "MmFf":
-------------------------------------------------------------------
058 - Melhore o jogo do DESAFIO 028 onde o computador vai "pensar"
em um número entre 0 e 10. Só que agora o jogador vai tentar
adivinhar até acertar, mostrando no final quantos palpites foram
necessários para vencer.
-------------------------------------------------------------------
059 - Crie um programa que leia dois valores e mostre um 
menu na tela:

[1]somar
[2]multiplicar
[3]maior
[4]novos números
[5]sair do programa

Seu programa deverá realizar a operação solicitada em cada caso.
-------------------------------------------------------------------
060 - Faça um programa que leia um número qualquer e mostre o
seu fatorial.
Ex.:5! = 5x4x3x2x1 = 120
-------------------------------------------------------------------
061 - Refaça o DESAFIO 051, lendo o primeiro termo e a razão de 
uma PA, mostrando os 10 primeiros termos da progressão usando a
estrutura while.
-------------------------------------------------------------------
062 - Melhore o DESAFIO061, perguntando para o usuário se ele
quer mostrar mais alguns termos. O programa encerra quando ele
disser que quer mostrar 0 termos.
-------------------------------------------------------------------
063 - Escreva um programa que leia um número n inteiro qualquer
e mostre na tela os n primeiros elementos de uma sequência de 
Fibonacci.
EX.:
0 -> 1 -> 1 -> 2 -> 3 -> 5 -> 8
-------------------------------------------------------------------
064 - Crie um programa que leia vários números inteiros pelo
teclado. O programa só vai parar quando o usuário digitar o
valor 999, que é a condição de parada. No final, mostre quantos
foram digitados e qual foi a soma entre eles.
-------------------------------------------------------------------
065 - Crie um programa que leia vários numeros inteiros pelo
teclado. No final da execução, mostre a média entre todos os
valores e qual foi o maior e menor valores lidos. O programa
deve perguntar ao usúario se ele quer ou não continuar a 
digitar valores.
-----------------------------------------------------------

		DESAFIO EXTRA:

065.1 - Faça um programa que peça dois números, base e expoente,
calcule e mostre o primeiro número elevado ao segundo número. Não
utilize a função potência da linguagem.

065.2 - Dado um número inteiro não-negativo n, determinar n!
5! = 5*4*3*2*1 = 120

065.3 - Dada uma sequência de números inteiros não-nulos, seguida
por 0, imprimir seus quadrados.

065.4 - Dado um número inteiro positivo n, imprimir os n primeiros
naturais ímpares.

065.5 - Dado um número n de empresas, e um número m de meses, e o 
ganho e gastos positivos e inteiros de cada empresa para cada mês, 
imprimir se a empresa nesses meses ficou com déficit, lucro ou 
indiferente imprimir o valor correspondente a essa balança.

Exemplo de Execução:

Digite o número de empresas: 3
Digite o número de meses: 2

Empresa 1:
Mês 1:
Digite o ganho da empresa no mês: 500
Digite o gasto da empresa no mês: 500

Mês 2:
Digite o ganho da empresa no mês: 600
Digite o gasto da empresa no mês: 600
------------------------------------------------------------------

 - Interrompendo repetições While

-----------------------------------------------------------
enquanto Verdadeiro	while True:
	se bloco	   if bloco:
           passo	      passo	
	se sem bloco	   if sem bloco:		
	   pula		      pula
	se moeda	   if moeda:
	   pega		      pega
	se trofeu	   if trofeu:
	   pula		      pula
	   interrompa         break
pega			pega
----------------------------------------
BREAK = serve para quebrar um looping que acontece em um determinada
sequencia de vezes
---------------------------------------------------------------------
cont = 1
while cont <= 10:
	print(cont, "->", end="")
	cont += 1
print("Acabou")
R.: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 -> Acabou
--------------------------------------------------------------
cont = 1 
while True:
	print(cont, "->", end="")
	cont += 1
print("Acabou")
R.: 1 -> 2 -> 3 -> 4 -> 5 -> 6 -> 7 -> 8 -> 9 -> 10 ->...
-------------------------------------------------------------
n = 0
while n != 999:
	n = int(input("Digite um número:"))
R.: Digite um número: 4 
    Digite um número: 5
    Digite um número: 0
    Digite um número: 1
    Digite um número: 8
    Digite um número: 2
----------------------------------------------
n = cont = 0
while cont < 3:
	n = int(input("Digite um número:"))
	cont += 1
R.: Digite um número: 1
    Digite um número: 4
    Digite um número: 2
----------------------------------------------
n = s = 0
while n != 999:
	n = int(input("Digite um número:"))
	s += n
print("A soma vale {}".format(s))
R.: Digite um número: 2
    Digite um número: 3
    Digite um número: 6
    Digite um número: 999
    A soma vale 1010
----------------------------------------------
n = s = 0
while True:
	n = int(input("Digite um número:"))
	if n == 999:
	    break
	s += n
print("A soma vale {}".format(s))
R.: Digite um número: 1
    Digite um número: 2
    Digite um número: 3
    Digite um número: 4
    Digite um número: 999
    A soma vale 10
-------------------------------------------------------------------------
n = int(input("Digite o número de pessoas:"))
cont = 0
 while cont < n:
	dia = int(input("Digite o dia de nascimento da pessoa %i:" %(cont+1)))
	mes = int(input("Digite o mes de nascimento da pessoa %i: %(cont+1)))
	ano = int(input("Digite o ano de nascimento da pessoa %i:" %(cont+1)))
	idade = int(input("Digite a idade a ser completada da pessoa %i:"%(cont+1)))

	print("A pessoa %i fará %i anos no dia %d/%i/%d" %(cont+1, idade, dia, mes, ano+idade))
	cont += 1
R.: Digite o número de pessoas: 1
    Informe o seu dia de nascimento da pessoa 1: 2
    Informe o seu mês de nascimento da pessoa 1: 3
    Informe o seu ano de nascimento: 1998
    Digite a idade a ser completada: 26
    A pessoa fará 26 no dia 23/12/2024
-------------------------------------------------------------------------
!! print(f"A soma vale {s}") = print("A soma vale {}".format(s))
		             ou
print("A soma vale",s) 
print("A pessoa fará %i anos no dia %i/%i/%i" %(idade,dia,mes,ano+idade))

%i ou %d --- variavel inteira
%f --- Variavel floats
%s --- Variavel strings
--------------------------------------------------------------------------
nome = "José"
idade = 33
print(f"O {nome} tem {idade} anos.')
print("O {} tem {} anos".format(nome,idade))
print("O %s tem %d anos"% (nome, idade))
----------------------------------------------
nome = "José"
idade = 33
salario = 987.35
print(f"O {nome} tem {idade} anos e ganha R${salario:.2f}")
R.:O José tem 33 anos e ganha R#987.3
------------------------------------------------------------
print(f"O {nome:^20} tem {idade} anos...} =         José
{nome:-^20} = -------José----------
{nome:->20} = -----------------José
{nome:-<20} = José-----------------
--------------------------------------

			DESAFIO:

-------------------------------------------------------------
066 - Crie um programa que leia vários números inteiros pelo 
teclado. O programa só vai parar quando o usuário digitar o
valor 999, que é a condição de parada. No final, mostre quantos
números foram digitados e qual foi a soma entre eles.
----------------------------------------------------------------
067 - Faça um programa que mostre a tabuada de vários números, 
um de cada vez, para cada valor digitado pelo usuário. O 
programa será interrompido quando o número solicitado for
negativo.
----------------------------------------------------------------
068 - Faça um programa que jogue par ou impar com o computador.
O jogo só será interrompido quando o jogador PERDER, mostrando o 
total de vitórias consecutivas que ele conquistou no final do 
jogo.
-------------------------------------------------------------------
069 - Crie um programa que leia a idade e o sexo de vários pessoas.
A cada pessoa cadastrada, programa deverá perguntar se o usuário
quer ou não continuar. No final, mostre:

A) quantas pessoas tem mais de 18 anos.
B) quantos homens foram cadastrados.
C) quantas mulheres tem menos de 20 anos
--------------------------------------------------------------------
070 - Crie um programa que leia o nome e o preço de vários produtos.
O programa deverá perguntar se o usuário vai continuar. No final,
mostre:

A) qual é o total gasto na compra
B) quantos produtos custam mais de R$1000
C) qual é o nome do produto mais barato
--------------------------------------------------------------------
071 - Crie um programa que simule o funcionamento de um caixa
eletrônico. No inicio, pergunte ao usuário qual será o valor a ser 
sacado (número inteiro) e o programa vai informar quantas cédulas de
cada valor serão entregues.

OBS.: Considere que o caixa possui cédulas de R$50, R$20, R$10 e R$1
-----------------------------------------------------------------------------

DESAFIO EXTRA:

071.1 - Dizemos que um número natural é triangular se ele é produto de três
números naturais consecutivos.

Exemplo: 120 é triangular, pois 4*5*6 == 120
Dado um inteiro não-negativo n, verificar se n é triangular.
-----------------------------------------------------------------------------

 - Tuplas - variavel que guarda vários valores

--------------------------------------------------------------------
lanche =
--------------------------------------------------------------------
lanche
hamburguer  suco  pizza  pudim
    0         1     2      3
--------------------------------------------------------------------
print(lanche [2])   = pizza
print(lanche [0:2]) = hamburguer | suco
print(lanche [1:])  = suco | pizza | pudim
print(lanche [-1])  = pudim
--------------------------------------------------------------------
for c in lanche:
	print(c)
--------------------------------------------------------------------
Tuplas são imutaveis = sem mudanças
--------------------------------------------------------------------
Variavel Composta:

lanche = () -> TUPLA
lanche = [] -> LISTA
lanche = {} -> DICIONÁRIO
--------------------------------------------------------------------
lanche = ("Hambúguer", "Suco", "Pizza", "Pudim")
print(lanche)
R.: ("Hambúrguer", "Suco", "Pizza", "Pudim")
--------------------------------------------------------------------
lanche = "Hambúrguer", "Suco", "Pizza", "Pudim"
print(lanche)
R.: ("Hambúrguer", "Suco", "Pizza", "Pudim")
--------------------------------------------------------------------
lanche = "Hamburguer"
lanche = "Suco"
print(lanche)
--------------------------------------------------------------------
lanche = ("Hambúrguer","Suco","Pizza","Pudim") -> Estrutura Composta
print(lanche[1])
R.:Suco
--------------------------------------------------------------------
lanche = ("Hamburguer","Suco", "Pizza", "Pudim")
print("lanche[3])
R.:Pudim
--------------------------------------------------------------------
lanche = ("Hambúruguer", "Suco", "Pizza", "Pudim")
print(lanche[-2])
R.:Pizza
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim")
print(lanche[1:3])
R.: Suco, Pizza
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim")
print(lanche[2:])
R.:Pizza, Pudim
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim")
print(lanche[:2])
R.:Hamburguer, Suco
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim")
print(lanche)
R.: Hamburguer, Suco, Pizza, Pudim
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza","Pudim")
lanche[1] = "Refrigerante"
print(lanche[1])
R.:Suco
--------------------------------------------------------------------
lanche = ("Hambúrguer", "Suco", "Pizza", "Pudim", "Batata Frita")
for cont in range(0, len(lanche)):
	print(f"Eu vou comer {lanche[cont]} na posição {cont}")
print("Comi pra caramba!")
R.: Eu vou comer Hambúruguer na posição 0
    Eu vou comer Suco na posição 1
    Eu vou comer Pizza na posição 2
    Eu vou comer Pudim na posição 3
    Eu vou comer Batata Frita na posição 4
    Comi pra caramba!
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim")
#print(len(lanche))
for comida in lanche:
	print(f"Eu vou comer {comida}")
print("Comi pra caramba!")
R.: Eu vou comer Hamburguer
    Eu vou comer Suco
    Eu vou comer Pizza
    Eu vou comer Pudim
    Comi pra caramba! 
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim", "Batata Frita")
for pos, comida in enumerate(lanche):
	print(f"Eu vou comer {comida} na posição {pos}")
R.: Eu vou comer Hamburguer na posição 0 
    Eu vou comer Suco na posição 1
    Eu vou comer Pizza na posição 2
    Eu vou comer Pudim na posição 3
    Eu vou comer Batata Frita na posição 4
    Comi pra caramba!
--------------------------------------------------------------------
for comida in lanche:
	print(f"Eu vou comer {comida}")
--------------------------------------------------------------------
for cont in range(0, len(lanche)):
	print(f"Eu vou comer {lanche[cont]} na posição {cont}")
--------------------------------------------------------------------
for pos, comida in enumerate(lanche):
	print(f"Eu vou comer {comida} na posição {pos}")
--------------------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim", "Batata Frita")
print(sorted(lanche))
print(lanche)
R.: ["Batata Frita", "Hambuerguer", "Pizza", "Pudim", "Suco"]
    ("Hamburguer", "Suco", "Pizza", "Pudim", "Batata Frita")
--------------------------------------------------------------------
!! sorted = colocar em ordem
--------------------------------------------------------------------
a = (2,5,4)
b = (5,8,1,2)
c = b + a
print(c)
R.:(5, 8, 1, 2, 2, 5, 4)
----------------------------------
Quantos números existem em A e B
a = (2, 5, 4)
b = (5, 8, 1, 2)
c = b + a
print(len(c))
R.: 7
---------------------------------
Quantas vezes o valor 5 aparece
a = (2 , 5, 4)
b = (5, 8, 1, 2)
c = b + a
print(c.count(5))
R.: 2
---------------------------------
Em qual posição o número aparece
a = (2, 5, 4)
b = (5, 8, 1, 2)
c = b + a
print(c)
print(c.index(8))
R.:(5, 8, 1, 2, 2, 5, 4)
   1
-------------------------------------
pessoa = ("Gustavo", 39, "M", 99.88)
print(pessoa)
R.:("Gustavo", 39, "M", 99.88)
-------------------------------------
pessoa = ("Gustavo", 39, "M", 99.88)
del(pessoa)
print(pessoa)
R.: Erro
     name "pessoa" is not defined
-------------------------------------

			DESAFIO:
\n = pula linha
-----------------------------------------------------------------
072 - Crie um programa que tenha uma tupla totalmente preenchida 
com uma contagem por extensão, de zero até vinte.
Seu programa deverá ler um número pelo teclado (entre 0 e 20) e 
mostrá-lo por extenso.
---------------------------------------------------------------------------
073 - Crie uma tupla preenchida com os 20 primeiros colocados da Tabela
do Campeonato Brasileiro de Futebol, na ordem de colocação. Depois mostre:
A) Apenas os 5 primeiros colocados.
B) Os ultimos 4 colocados da tabela.
C) Uma lista com os times em ordem alfabética.
D) Em que posição na tabela está o time da Chapecoense
---------------------------------------------------------------------------
074 - Crie um programa que vai gerar cinco números aleatórios e colocar em
uma tupla. 

Depois disso, mostre a listagem de números gerados e também indique o menor 
e o maior valor que estão na tupla.

from random import randint
num = randint(0,10) -> 5x
Máximo valor = {max(numeros)}
Minímo valor = {min(numeros)}
------------------------------------------------------------------------------
075 - Desenvolva um programa que leia quatro valores pelo teclado e guarde-os 
em uma tupla. No final, mostre:
A) quantos vezes apareceu o valor 9
B) em que posição foi digitado o primeiro valor 3
C) Quais foram os números pares.

num = (int(input("Informe um número:")), 5 vezes
print(f"{num.count(9)} vezes")
print(f"{num.index(2)}º posição")
-------------------------------------------------------------------------------
076 - Crie um programa que tenha uma tupla única com nomes de produtos e seus 
respectivos preços, na sequencia.
No final, mostre uma listagem de preços, organizando os dados em forma tabular.

produtos = ("Caderno", 10.99,


	    )
for pos in range(0, len(listagem)):
	print(listagem[pos])
----------------------------------------------------------------------------------
077 - Crie um programa que tenha uma tupla com várias palavras (não usar acentos).
Depois disso, você deve mostrar, para cada palavra, quais são as suas vogais.
----------------------------------------------------------------------------------

				DESAFIO EXTRAS:

077.1 - Dizemos um número natural n é palíndromo se:
1º algarismo de n é igual ao seu último algarismo;
2º algarismo de n é igual ao penúltimo algarismo e assim sucessivamente;

Exemplos:
567765 e 32423 palindromos
567675 não palíndromo
Dado um número natural n > 10, verificar se n é palindromo.

-----------------------------------------------------------------------------------

-Listas(Variáveis Compostas)

-----------------------------------------------------------
Tuplas e Listas guardam vários valores

Tuplas = imutáveis
Listas = não imutáveis (podem ter a estrutura modificada)
-----------------------------------------------------------
!*string = variavel composta
-----------------------------------------------------------
lanche = ("Hamburguer", "Suco", "Pizza", "Pudim")
print(lanche[2])
R.: Pizza
--------------------------------------------------
Tuplas()
Listas[]
-------------------------------------------------
lanche = Hamburguer Suco Pizza Pudim
	      0       1    2     3

lanche = ["Hamburguer", "Suco", "Pizza", "Pudim"]
lanche[3] = "Picolle"
--------------------------------------------------
lanche = Hamburguer Suco Pizza Picolle
             0       1     2      3
--------------------------------------------------
Adiciona no final da lista
lanche.append("Biscoito")

lanche = Hamburguer, Suco, Pizza, Picolle, Biscoito
	      0        1     2       3         4
---------------------------------------------------
Adiciona no começo da lista
lanche.insert(0,"Cachorro quente")

lanche = Cachorro quente, Hamburguer, Suco, Pizza, Picole, Biscoito
               0              1         2     3      4       5
--------------------------------------------------------------------
elimina elementos                                                   |
del lanche[3]                                                       |
lanche.pop(3) - elimina o ultimo elemento                           |
lanche.remove("Pizza")                                              |
--------------------------------------------------------------------
lanche = Cachorro quente, Hamburguer, Suco, Pizza, Picole, Biscoito
                 0            1         2     3       4       5 
--------------------------------------------------------------------
if "Pizza" in lanche:
	lanche.remove("Pizza")
-----------------------------------
lanche = Cachorro quente, Hamburguer, Suco, Picolle
----------------------------
valores = list(range(4,11))

valores
|4|5|6|7|8|9|10|
 0 1 2 3 4 5 6
----------------------------------------
Organizar valores do menor para o maior
valores = [8, 2, 5, 4, 9, 3, 0]
valores.sort()
R.:valores
   |0|2|3|4|5|8|9|
    0 1 2 3 4 5 6
-------------------
antes
valores
|8|2|5|4|9|3|0|
 0 1 2 3 4 5 6
-------------------
depois 
valores
|0|2|3|4|5|8|9|
 0 1 2 3 4 5 6
--------------------------------------------
Inverte os valores do maior para o menor
valores.sort()
valores.sort(reverse = True)
R.: |9|8|5|4|3|2|0|
     0 1 2 3 4 5 6 
--------------------------------------------
valores
|9|8|5|4|3|2|0|
 0 1 2 3 4 5 6                                                                          3354
--------------------------------
Conta a quantidade de elementos 
valores = [8,2,5,4,9,3,0]
len(valores)
--------------------------------
num = (2, 5, 9, 1)
print(num)
--------------------------------
num = (2, 5, 9, 1)
num[2] = 3
print(num)
R.: Erro
--------------------------------
num = [2, 5, 9, 11]
print(num)
R.:[2,5,9,1]
--------------------------------
num = [2, 5, 9, 1]
num[2] = 3
print(num)
R.:[2, 5, 3, 1]
--------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num[4] = 7
print(num)
R.: Erro
--------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
print(num)
R.:[2, 5, 9, 1, 7]
--------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort()
print(num)
R.: [1, 2, 3, 5, 7]
--------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort(reverse=True)
print(num)
R.: [7, 5, 3, 2, 1]
---------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort(reverse=True)
print(num)
print(f"Essa lista tem {len(num)} elementos.")
R.:[7,5,3,2,1]
    Essa lista tem 5 elementos
----------------------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort(reverse=True)
num.insert(2,0) -> (posição, valor)
print(num)
print(f"Essa lista tem {len(num)} elementos.")
R.: [7, 5, 0, 3, 2, 1]
    Essa lista tem 6 elementos
------------------------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort(reverse = True)
num.insert(2,0)
num.pop() -> elimina o valor 1
print(num)
print(f"Essa lista tem {len(num)} elementos.")
R.: [ 7, 5, 0, 3, 2]
Essa lista tem 5 elementos
------------------------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort(reverse=True)
num.insert(2,0)
num.pop(2)
print(num)
print(f"Essa lista tem {len(num)} elementos.")
R.: [7, 5, 3, 2, 1]
    Essa lista tem 5 elementos
------------------------------------------------
num = [2, 5, 9, 1]
num[2] = 3
num.append(7)
num.sort(reverse=True)
num.insert(2,2)
print(num)
print(f"Essa lista tem {len(num)} elementos.")
num = [2, 5, 9, 1]
num[2] =3 
num.append(7)
num.sort(reverse = True)
num.insert(2, 2)
if 5 in num:
	num.remove(5)
else:
	print("Não achei o número 5")
print(num)
print(f"Essa lista tem {len(num)} elementos")
R.:[7, 2, 3, 2, 1]
  Essa lista tem 5 elementos
------------------------------------------------
valores = []
valores.append(5)
valores.append(9)
valores.append(4)

for v in valores:
	print(f"{v}...", end="")
R.: 5...9...4...
------------------------------------------------
valores = []
valores.append(5)
valores.append(9)
valores.append(4)

for c, v in enumerate(valores):
	print(f"Na posição {c} encontrei o valor {v}!")
print("Cheguei ao final da lista.")
R.: Na posição 0 encontrei o valor 5!
    Na posição 1 encontrei o valor 9!
    Na posição 2 encontrei o valor 4!
    Cheguei ao final da lista.
---------------------------------------------------------
valores = list()
for cont in range(0,5):
	valores.append(int(input("Digite um valor:")))

for c, v in enumerate(valores):
	print(f"Na posição {c} encontrei o valor {v}!")
print("Cheguei ao final da lista.")
R.: Digite um valor: 4
    Digite um valor: 8
    Digite um valor: 9
    Digite um valor: 1
    Digite um valor: 3
    Na posição 0 encontrei o valor 4!
    Na posição 1 encontrei o valor 8!
    Na posição 2 encontrei o valor 9!
    Na posição 3 encontrei o valor 1!
    Na posição 4 encontrei o valor 3!
----------------------------------------------------------
a = [2, 3, 4, 7]
b = a 

print(a)
print(b)
----------------------------------------------------------
a = [2, 3, 4, 7]
b = a 
b[2] = 8
print(f"Lista A: {a}")
print(f"Lista B: {b}")
R.: Lista A: [2,3,8,7]
    Lista B: [2,3,8,7]
---------------------------------------------------------
a = [2, 3, 4, 7]
b = a[:]
print(f"Lista A: {a}")
print(f"Lista B: {b}")
---------------------------------------------------------

			DESAFIOS:

-----------------------------------------------------------------
078 - Faça um programa que leia 5 valores numéricos e guarde-os
em uma lista.
No final, mostre o qual foi o maior e o menor valor digitado e as 
suas respectivas posições na lista.
-------------------------------------------------------------------
079 - Crie um programa onde o usuário possa digitar vários valores
numéricos e cadastre-os em uma lista. Caso o número já exista lá 
dentro, ele não será adicionado.
No final, serão exibidos todos os valores únicos digitados, em ordem
crescente.
---------------------------------------------------------------------
080 - Crie um programa onde o usuário possa digitar cinco valores 
numéricos e cadastre-os em uma lista, já na posição correta de 
inserção (sem usar o sort()).
No final, mostre a lista ordenada na tela.
---------------------------------------------------------------------
081 - Crie um programa que vai ler vários números e colocar em uma
lista.
Depois disso, mostre:

A) Quantos números foram digitados
B) A lista de valores, ordenada de forma decrescente
C) Se o valor 5 foi digitado e está ou não na lista
-------------------------------------------------------------------------
082 - Crie um programa que vai ler vários números e colocar em uma lista
Depois disso, crie duas listas extras que vão contar apenas os valores
pares e os valores impares digitados, respectivamente.
Ao final, mostre o conteúdo das três listas geradas.
--------------------------------------------------------------------------
083 - Crie um programa onde o usuário digite uma expressão qualquer que
use parênteses. Seu aplicativo deverá analisar se a expressão passada está
com os parênteses abertos e fechados na ordem correta.
---------------------------------------------------------------------------

 - Listas(Variáveis Compostas)

---------------------------------------------------------------------------
Dados 
"Pedro"| 25
   0      1

pessoas = list()
pessoas.append(dados[:])

pessoas
|             |            |           |
|"Pedro" | 25 |"Maria" | 19|"João" | 32|
|   0	    1 |   0      1 |  0       1|
       0             1            2

pessoas = [["Pedro", 25],["Maria",19],["João", 32]]          

print(pessoas[0][0]) = Pedro
print(pessoas[1][1]) = 19
print(pessoas[2][0]) = João
print(pessoas[1]) = ["Maria", 19]

teste = list()
teste.append("Gustavo")
teste.append(40)
print(teste)
R.:["Gustavo", 40]
-------------------------------
teste = list()
teste.append("Gustavo")
teste.append(40)
galera = list()
galera.append(teste)
print(galera)
R.:[["Gustavo", 40]]
-------------------------------
teste = list()
teste.append("Gustavo")
teste.append(40)
galera = list()
galera.append(teste[:])
teste[0] = "Maria"
teste[1] = 22
galera.append(teste[:])
print(galera)
R.: [["Gustavo", 40],["Maria", 22]]
-----------------------------------------------------------------------
galera = [["João", 19], ["Ana", 33],["Joaquim", 13], ["Maria", 45]]
print(galera)
R.:[["João", 19], ["Ana", 33], ["Joaquim", 13], ["Maria", 45]]
-----------------------------------------------------------------------
galera = [["João", 19], ["Ana", 33], ["Joaquim", 13], ["Maria" , 45]]
print(galera[0])
R.:["João", 19]
-----------------------------------------------------------------------
galera = [["João" ,19], ["Ana", 33], ["Joaquim", 13], ["Maria", 45]]
print(galera[0][0])
R.: João
-----------------------------------------------------------------------
galera = [["João", 19], ["Ana", 33], ["Joaquim", 13], ["Maria", 45]]
print(galera[2][1])
R.: 13
-----------------------------------------------------------------------
galera = [["João", 19], ["Ana", 33], ["Joaquim", 13], ["Maria" ,45]]
for p in galera:
	print(f"{p[0]} tem {p[1]} anos de idade.")
R.: João tem 19 anos de idade.
    Ana tem 33 anos de idade.
    Joaquim tem 13 anos de idade.
    Maria tem 45 anos de idade.
-----------------------------------------------------------------------
galera = list()
dado = list()
for c in range(0, 3):
	dado.append(str(input("Nome:")))
	dado.append(int(input("Idade:")))
	galera.append(dado[:])
	dado.clear()
print(galera)
R.: Idade:22
    Nome: Maria
    Idade: 33
    Nome: Claudia
    Idade: 55
[["Pedro", 22], ["Maria", 33], ["Claudia", 55]]
-------------------------------------------------------------------------
galera = list()
dado = list()
totmai = totmen = 0
for c in range(0,3):
	dado.append(str(input("Nome:")))
	dado.append(int(input("Idade:")))
	galera.append(dado[:])
	dado.clear()
for p in galera:
	if p[1] >= 21:
	   print(f"{p[0]} é maior de idade.")
	   totmai += 1
	else:
	   print(f"{p[0]} é menor de idade.")
	   totmen += 1
print(f"Temos {totmai} maiores e {totmen} menores de idade.")
R.: Nome: Caio
    Idade: 35
    Cleiton é maior de idade
    Eliane é menor de idade
    Caio é maior de idade
    Temos 2 maiores e 1 menores de idade
--------------------------------------------------------------------------
https://chat.whatsapp.com/4p1FH3MJHuf2pmcsI1S3Hs

https://chat.whatsapp.com/4p1FH3MJHuf2pmcsI1S3Hs

https://chat.whatsapp.com/4p1FH3MJHuf2pmcsI1S3Hs
